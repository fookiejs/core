name: CI
on:
    push:
        branches:
            - main
        paths-ignore:
            - "docs/**"
    pull_request:
        branches:
            - main
        paths-ignore:
            - "docs/**"
jobs:
    test-and-lint:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [22.14.0]
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: 'npm'

            - run: npm install
            - run: npm test
            - run: npm run lint

    publish:
        needs: test-and-lint
        runs-on: ubuntu-latest
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        steps:
            - uses: actions/checkout@v3
              with:
                  fetch-depth: 0
            
            - uses: actions/setup-node@v3
              with:
                  node-version: 22.14.0
                  registry-url: 'https://registry.npmjs.org'

            - run: npm install

            - name: Create Changeset
              run: |
                PACKAGES=$(ls -d packages/*/)
                
                CORE_CHANGED=$(git diff --name-only HEAD^ HEAD | grep -q "^packages/core/" && echo "true" || echo "false")
                
                CHANGED_PACKAGES=""
                for pkg in $PACKAGES; do
                  if git diff --name-only HEAD^ HEAD | grep -q "^${pkg}"; then
                    PKG_NAME=$(node -p "require('./${pkg}package.json').name")
                    if [ -z "$CHANGED_PACKAGES" ]; then
                      CHANGED_PACKAGES="\"${PKG_NAME}\": \"patch\""
                    else
                      CHANGED_PACKAGES="${CHANGED_PACKAGES},\n\"${PKG_NAME}\": \"patch\""
                    fi
                  fi
                done
                
                if [ "$CORE_CHANGED" = "true" ]; then
                  for pkg in $PACKAGES; do
                    PKG_NAME=$(node -p "require('./${pkg}package.json').name")
                    if [[ "$PKG_NAME" != "@fookiejs/core" ]]; then
                      HAS_CORE_DEP=$(node -p "!!require('./${pkg}package.json').dependencies?.['@fookiejs/core'] || !!require('./${pkg}package.json').peerDependencies?.['@fookiejs/core']" 2>/dev/null)
                      if [ "$HAS_CORE_DEP" = "true" ]; then
                        if [ -z "$CHANGED_PACKAGES" ]; then
                          CHANGED_PACKAGES="\"${PKG_NAME}\": \"patch\""
                        else
                          CHANGED_PACKAGES="${CHANGED_PACKAGES},\n\"${PKG_NAME}\": \"patch\""
                        fi
                      fi
                    fi
                  done
                fi
                
                if [ ! -z "$CHANGED_PACKAGES" ]; then
                  echo -e "---\n${CHANGED_PACKAGES}\n---\n\nAuto update" > .changeset/auto-update.md
                fi

            - name: Version and Publish
              run: |
                git config --global user.name "github-actions[bot]"
                git config --global user.email "github-actions[bot]@users.noreply.github.com"
                npm run version-packages
                npm run release
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 