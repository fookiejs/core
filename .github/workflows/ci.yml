name: CI
on:
    push:
        branches:
            - main
        paths-ignore:
            - "docs/**"
    pull_request:
        branches:
            - main
        paths-ignore:
            - "docs/**"
jobs:
    build-and-test:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [22.14.0]
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: 'npm'

            - run: npm ci
            - run: npm test
              working-directory: .
            - run: npm run build
            - run: npm run lint
              if: success()

    publish:
        needs: build-and-test
        runs-on: ubuntu-latest
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        steps:
            - uses: actions/checkout@v3
              with:
                  fetch-depth: 0
            
            - uses: actions/setup-node@v3
              with:
                  node-version: 22.14.0
                  registry-url: 'https://registry.npmjs.org'

            - run: npm ci
            - run: npm run build

            - name: Create Release Pull Request or Publish
              id: changesets
              uses: changesets/action@v1
              with:
                publish: npx changeset publish
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Configure Git User
              run: |
                git config --global user.name "${GITHUB_ACTOR}"
                git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"
            
            - name: Publish to NPM
              run: npx turbo run publish-packages
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    auto-changeset:
        runs-on: ubuntu-latest
        if: "!contains(github.event.head_commit.message, 'Version Packages')"
        steps:
            - uses: actions/checkout@v3
            
            - name: Create Auto Changeset
              run: |
                COMMIT_MSG="${{ github.event.head_commit.message }}"
                
                # Hangi pakette değişiklik olduğunu kontrol et
                if git diff --name-only HEAD^ HEAD | grep -q "^packages/core/"; then
                  CORE_CHANGED=true
                fi
                if git diff --name-only HEAD^ HEAD | grep -q "^packages/cache/"; then
                  CACHE_CHANGED=true
                fi
                
                if [[ $COMMIT_MSG == feat:* ]]; then
                  CHANGE_TYPE="minor"
                elif [[ $COMMIT_MSG == fix:* ]]; then
                  CHANGE_TYPE="patch"
                elif [[ $COMMIT_MSG == breaking:* ]]; then
                  CHANGE_TYPE="major"
                else
                  CHANGE_TYPE="patch"
                fi
                
                echo "---" > .changeset/auto-${GITHUB_SHA}.md
                if [[ $CORE_CHANGED == true ]]; then
                  echo "\"@fookiejs/core\": \"${CHANGE_TYPE}\"" >> .changeset/auto-${GITHUB_SHA}.md
                fi
                if [[ $CACHE_CHANGED == true ]]; then
                  echo "\"@fookiejs/cache\": \"${CHANGE_TYPE}\"" >> .changeset/auto-${GITHUB_SHA}.md
                fi
                echo "---" >> .changeset/auto-${GITHUB_SHA}.md
                echo "" >> .changeset/auto-${GITHUB_SHA}.md
                echo "${COMMIT_MSG}" >> .changeset/auto-${GITHUB_SHA}.md
                
            - name: Create Pull Request
              uses: peter-evans/create-pull-request@v5
              with:
                  title: "chore: auto changeset"
                  commit-message: "chore: auto changeset"
                  branch: auto-changeset 