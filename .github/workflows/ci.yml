name: CI
on:
    push:
        branches:
            - main
        paths-ignore:
            - "docs/**"
    pull_request:
        branches:
            - main
        paths-ignore:
            - "docs/**"
jobs:
    test-and-lint:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [22.14.0]
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: 'npm'

            - run: npm install
            - run: npm test
            - run: npm run lint
              if: success()

    publish:
        needs: test-and-lint
        runs-on: ubuntu-latest
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        steps:
            - uses: actions/checkout@v3
              with:
                  fetch-depth: 0
            
            - uses: actions/setup-node@v3
              with:
                  node-version: 22.14.0
                  registry-url: 'https://registry.npmjs.org'

            - run: npm install

            # Önce version'ları güncelle
            - name: Version Packages
              run: npm run version-packages
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            # Sonra publish et
            - name: Publish to NPM
              run: npm run release
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    auto-changeset:
        runs-on: ubuntu-latest
        if: "!contains(github.event.head_commit.message, 'Version Packages')"
        steps:
            - uses: actions/checkout@v3
            
            - name: Create Auto Changeset
              run: |
                COMMIT_MSG="${{ github.event.head_commit.message }}"
                
                # Her paket için ayrı changeset oluştur
                if git diff --name-only HEAD^ HEAD | grep -q "^packages/core/"; then
                  echo "---" > .changeset/core-${GITHUB_SHA}.md
                  if [[ $COMMIT_MSG == feat:core:* ]]; then
                    echo "\"@fookiejs/core\": \"minor\"" >> .changeset/core-${GITHUB_SHA}.md
                  elif [[ $COMMIT_MSG == fix:core:* ]]; then
                    echo "\"@fookiejs/core\": \"patch\"" >> .changeset/core-${GITHUB_SHA}.md
                  elif [[ $COMMIT_MSG == breaking:core:* ]]; then
                    echo "\"@fookiejs/core\": \"major\"" >> .changeset/core-${GITHUB_SHA}.md
                  fi
                  echo "---" >> .changeset/core-${GITHUB_SHA}.md
                  echo "" >> .changeset/core-${GITHUB_SHA}.md
                  echo "${COMMIT_MSG}" >> .changeset/core-${GITHUB_SHA}.md
                fi

                if git diff --name-only HEAD^ HEAD | grep -q "^packages/cache/"; then
                  echo "---" > .changeset/cache-${GITHUB_SHA}.md
                  if [[ $COMMIT_MSG == feat:cache:* ]]; then
                    echo "\"@fookiejs/cache\": \"minor\"" >> .changeset/cache-${GITHUB_SHA}.md
                  elif [[ $COMMIT_MSG == fix:cache:* ]]; then
                    echo "\"@fookiejs/cache\": \"patch\"" >> .changeset/cache-${GITHUB_SHA}.md
                  elif [[ $COMMIT_MSG == breaking:cache:* ]]; then
                    echo "\"@fookiejs/cache\": \"major\"" >> .changeset/cache-${GITHUB_SHA}.md
                  fi
                  echo "---" >> .changeset/cache-${GITHUB_SHA}.md
                  echo "" >> .changeset/cache-${GITHUB_SHA}.md
                  echo "${COMMIT_MSG}" >> .changeset/cache-${GITHUB_SHA}.md
                fi

            - name: Create Pull Request
              uses: peter-evans/create-pull-request@v5
              with:
                  title: "chore: auto changeset"
                  commit-message: "chore: auto changeset"
                  branch: auto-changeset 