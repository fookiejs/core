name: Test and Publish

on:
  push:
    branches: [main]

permissions:
  contents: write
  id-token: write

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Setup repo
        uses: actions/checkout@v4

      - name: Setup Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x

      - name: Check types
        run: deno check packages/*/mod.ts

      - name: Run all tests
        env:
          POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
          POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        run: deno task test

  publish:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.release.target_commitish }}

      - name: Setup Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x

      - name: Bump core version
        run: |
          core_json="packages/core/deno.json"
          version=$(grep '"version"' "$core_json" | awk -F '"' '{print $4}')
          IFS='.' read -r major minor patch <<< "$version"
          minor=$((minor + 1))
          patch=0
          new_version="$major.$minor.$patch"
          sed -i "s/\"version\": \"$version\"/\"version\": \"$new_version\"/" "$core_json"
          echo "Updated core version from $version to $new_version"
          echo "CORE_VERSION=$new_version" >> $GITHUB_ENV

      - name: Commit bumped core version
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: bump core package version for release"

      - name: Publish core package
        run: |
          cd packages/core
          deno publish
          cd ../..

      - name: Bump other packages' core dependency and their versions
        run: |
          for pkg in packages/*; do
            if [ "$pkg" != "packages/core" ] && [ -f "$pkg/deno.json" ]; then
              pkg_json="$pkg/deno.json"
              version=$(grep '"version"' "$pkg_json" | awk -F '"' '{print $4}')
              IFS='.' read -r major minor patch <<< "$version"
              minor=$((minor + 1))
              patch=0
              new_version="$major.$minor.$patch"
              sed -i "s/\"version\": \"$version\"/\"version\": \"$new_version\"/" "$pkg_json"
              if grep -q '@fookiejs/core' "$pkg_json"; then
                sed -i "s/@fookiejs\/core@[0-9]*\.[0-9]*\.[0-9]*/@fookiejs\/core@$CORE_VERSION/g" "$pkg_json"
                echo "Updated @fookiejs/core version in $pkg_json to $CORE_VERSION"
              fi
              echo "Updated $pkg_json from $version to $new_version"
            fi
          done

      - name: Commit bumped other packages
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: bump other packages for new core version"

      - name: Publish other packages
        run: |
          for pkg in packages/*; do
            if [ "$pkg" != "packages/core" ] && [ -f "$pkg/deno.json" ]; then
              echo "Publishing $pkg..."
              (cd "$pkg" && deno publish)
            fi
          done
