name: Test and Publish

on:
  release:
    types: [created]
  pull_request:
    branches: [main]

permissions:
  contents: write
  id-token: write

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Setup repo
        uses: actions/checkout@v4

      - name: Setup Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x

      - name: Run all tests
        env:
          POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
          POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        run: deno task test

  publish:
    needs: test
    if: github.event_name == 'release'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.release.target_commitish }}

      - name: Setup Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x

      - name: Bump versions
        run: |
          bump_version() {
            local pkg_json="$1"
            local version=$(grep '"version"' "$pkg_json" | awk -F '"' '{print $4}')
            IFS='.' read -r major minor patch <<< "$version"
            minor=$((minor + 1))
            patch=0
            new_version="$major.$minor.$patch"
            sed -i "s/\"version\": \"$version\"/\"version\": \"$new_version\"/" "$pkg_json"
            echo "Updated $pkg_json from $version to $new_version"
            # Update @fookiejs/core version in imports if present
            if grep -q '@fookiejs/core' "$pkg_json"; then
              sed -i "s/@fookiejs\/core@[0-9]*\.[0-9]*\.[0-9]*/@fookiejs\/core@$new_version/g" "$pkg_json"
              echo "Updated @fookiejs/core version in $pkg_json to $new_version"
            fi
          }

          echo "Bumping all packages to minor version..."
          for pkg in packages/*; do
            if [ -f "$pkg/deno.json" ]; then
              bump_version "$pkg/deno.json"
            fi
          done

      - name: Commit bumped versions
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: bump package versions for release"

      - name: Publish packages
        run: |
          if [ -f "packages/core/deno.json" ]; then
            echo "Publishing core package first..."
            (cd "packages/core" && deno publish)
          fi

          for pkg in packages/*; do
            if [ "$pkg" != "packages/core" ] && [ -f "$pkg/deno.json" ]; then
              echo "Publishing $pkg..."
              (cd "$pkg" && deno publish)
            fi
          done
